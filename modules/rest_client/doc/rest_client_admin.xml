<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>

	<section id="sec-overview">
	<title>Overview</title>
	<para>
	The <emphasis>rest_client</emphasis> module provides a means of interacting
	with an HTTP server by doing RESTful queries, such as GET and POST. 
	</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>No dependencies on other &osips; modules.</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>

	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before 
		running &osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>libcurl</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>

	<section>
		<title>Exported Parameters</title>
	<section>
		<title><varname>connection_timeout</varname> (integer)</title>
		<para>
		Maximum time allowed to establish a connection with the server.
		</para>
		<para>
		<emphasis>
			Default value is <quote>20</quote> seconds.
		</emphasis>
		</para>
		<example>
		<title>Setting the <varname>connection_timeout</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("rest_client", "connection_timeout", 300)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>curl_timeout</varname> (integer)</title>
		<para>
		Maximum time allowed for the libcurl transfer to complete.
		</para>
		<para>
		<emphasis>
			Default value is <quote>20</quote> seconds.
		</emphasis>
		</para>
		<example>
		<title>Setting the <varname>curl_timeout</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("rest_client", "curl_timeout", 300)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>ssl_verifypeer</varname> (integer)</title>
		<para>
		Set this to 0 in order to disable the verification of the remote peer's
		certificate. Verification is done using a default bundle of CA certificates
		which come with libcurl.
		</para>
		<para>
		<emphasis>
			Default value is <quote>1</quote> (enabled).
		</emphasis>
		</para>
		<example>
		<title>Setting the <varname>ssl_verifypeer</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("rest_client", "ssl_verifypeer", 0)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>ssl_verifyhost</varname> (integer)</title>
		<para>
		Set this to 0 in order to disable the verification that the remote peer
		actually corresponds to the server listed in the certificate.
		</para>
		<para>
		<emphasis>
			Default value is <quote>1</quote> (enabled).
		</emphasis>
		</para>
		<example>
		<title>Setting the <varname>ssl_verifyhost</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("rest_client", "ssl_verifyhost", 0)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>ssl_capath</varname> (integer)</title>
		<para>
		An optional path for CA certificates to be used for host verifications.
		</para>
		<example>
		<title>Setting the <varname>ssl_capath</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("rest_client", "ssl_capath", "/home/opensips/ca_certificates")
...
</programlisting>
		</example>
	</section>

	</section>

	<section>
	<title>Exported Functions</title>
	<section>
		<title>
		<function moreinfo="none">rest_get(url, body_pv[, ctype_pv[, retcode_pv]])
		</function>
		</title>
		<para>
		Issues an HTTP GET request to the given 'url', and returns a representation
		of the resource.
		</para>
		<para>
		The <emphasis>body_pv</emphasis> avp will hold the body of the HTTP
		response.
		</para>
		<para>
		The optional <emphasis>ctype_pv</emphasis> avp will contain the value
		of the "Content-Type:" header.
		</para>
		<para>
		The optional <emphasis>retcode_pv</emphasis> avp is used to retain the
		HTTP status code of the response message.
		</para>

		<para>Possible parameter types</para>
		<itemizedlist>
		<listitem>
			<para><emphasis>url</emphasis> - String, pseudo-variable, or a String
				which includes pseudo-variables. (useful for specifying additional
				attribute-value fields in the URL)
			</para>
		</listitem>
		<listitem>
			<para><emphasis>body_pv, ctype_pv, retcode_pv</emphasis> -
			pseudo-variables</para>
		</listitem>
		</itemizedlist>
		<para>
		This function can be used from the <emphasis>startup, branch, failure,
				request</emphasis> and <emphasis>timer</emphasis> routes.
		</para>
		<example>
		<title><function moreinfo="none">rest_get</function> usage</title>
		<programlisting format="linespecific">
...
# Example of querying a REST service to get the credit of an account

if (!rest_get("http://getcredit.org/?ruri=$fU", "$avp(credit)", "$avp(ct)", "$avp(rcode)")) {
	xlog("Error code $avp(rcode) in HTTP GET!\n");
	send_reply("403", "Not registered");
	exit;
}
...
</programlisting>
		</example>
	</section>
	<section>
		<title>
		<function moreinfo="none">rest_post(url, send_body_pv, send_ctype_pv,
				recv_body_pv[, recv_ctype_pv[, retcode_pv]])
		</function>
		</title>
		<para>
		Issues an HTTP POST request to the specified 'url'. The request body will
		be copied from the 'send_body_pv' pseudo-variable. Its MIME content type
		will be taken from 'send_ctype_pv'.
		</para>
		<para>
		The <emphasis>recv_body_pv</emphasis> avp will hold the body of the HTTP
		response.
		</para>
		<para>
		The optional <emphasis>recv_ctype_pv</emphasis> parameter will contain
		the value of the "Content-Type:" header of the response message.
		</para>
		<para>
		The optional <emphasis>retcode_pv</emphasis> avp parameter can be given
		in order to save the HTTP status code of the response message.
		</para>
		<para>Possible parameter types</para>
		<itemizedlist>
		<listitem>
			<para><emphasis>url, send_body_pv, send_type_pv</emphasis> -
			String, pseudo-variable, or a String which includes pseudo-variables.
			</para>
		</listitem>
		<listitem>
			<para><emphasis>recv_body_pv, recv_ctype_pv, retcode_pv</emphasis> -
			pseudo-variables</para>
		</listitem>
		</itemizedlist>
		<para>
		This function can be used from the <emphasis>startup, branch, failure,
				request</emphasis> and <emphasis>timer</emphasis> routes.
		</para>
		<example>
		<title><function moreinfo="none">rest_post</function> usage</title>
		<programlisting format="linespecific">
...
# Storing data using a RESTful service with an HTTP POST request

if (!rest_post("http://myserver.org/register_user", "$fU", "text/plain", "$avp(body)", "$avp(ct)", "$avp(rcode)")) {
	xlog("Error code $avp(rcode) in HTTP POST!\n");
	send_reply("403", "POST Forbidden");
	exit;
}
...
</programlisting>
		</example>
	</section>

	</section>
</chapter>

